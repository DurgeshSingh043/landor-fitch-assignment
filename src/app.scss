.App {
  font-family: Open Sans; // sans-serif;
}

*{
  margin: 0;
  padding: 0
}

@mixin generate($prefix, $property) {
  // List of sizes to generate for each
  $sizes: 0, .25, .5, 1, 1.5, 3;
  // Spacing to multiply the sizes by
  $spacing: 1rem;
  
  // Loop through all of the sizes(we use @for rather than @each, as we want access to the index)
  @for $i from 1 through length($sizes) {
    // Get the size for the current index
    $size: nth($sizes, $i);
    
    // Create the rule
    .#{$prefix}-#{$i - 1} {
      //#{$property}: $spacing * $size;
      @each $item in $property {
        @if $item != '' {
           #{$item}: $spacing * $size; 
        }
    }
    }
  }
}

$rules: (
  (m, margin),
  (ml, margin-left),
  (mt, margin-top),
  (mb, margin-bottom),
  (mr, margin-right),
  (mx, margin-top, margin-bottom),
  (my, margin-right, margin-left),
  (p, padding),
  (pl, padding-left),
  (pt, padding-top),
  (pb, padding-bottom),
  (pr, padding-right),
  (px, padding-top, padding-bottom),
  (py, padding-right, padding-left),
);

@each $item in $rules {
  @if length($item) > 2 {
    @include generate(nth($item, 1), (nth($item, 2), nth($item, 3)));
  } @else {
    @include generate(nth($item, 1), (nth($item, 2)));
  }
}